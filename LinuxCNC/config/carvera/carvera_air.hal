# load the realtime components

loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS

loadrt remora-spi

# estop loopback, SPI comms enable and feedback
net user-enable-out     <= iocontrol.0.user-enable-out      => remora.SPI-enable => remora.output.4 => remora.output.5
net user-request-enable <= iocontrol.0.user-request-enable  => remora.SPI-reset
net remora-status       <= remora.SPI-status                => iocontrol.0.emc-enable-in


# add the remora and motion functions to threads
addf remora.read servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf remora.update-freq servo-thread
addf remora.write servo-thread

# turn on the light
setp remora.output.0 true

# name the remora pins for better readability
# inputs
# net remora-in-spindle-alarm remora.input.0
# net remora-in-x-alarm remora.input.1
# net remora-in-y-alarm remora.input.2
# net remora-in-z-alarm remora.input.3
# net remora-in-cover-closed remora.input.4
# net remora-in-main-button remora.input.5
# net remora-in-ext remora.input.6
# net remora-in-x-endstop remora.input.7
# net remora-in-y-endstop remora.input.8
# net remora-in-z-endstop remora.input.9
# net remora-in-a-endstop remora.input.10
# net remora-in-probe remora.input.11
# net remora-in-probe-calibrate remora.input.12

# outputs
# net remora-out-light remora.output.0
# net remora-out-tool-sensor remora.output.1
# net remora-out-beeper remora.output.2
# net remora-out-ext remora.output.3

# set points
# net remora-sp-spindle-pwm remora.SP.0
# net remora-sp-spindle-period remora.SP.1
# net remora-sp-power-fan-pwm remora.SP.2
# net remora-sp-power-fan-period remora.SP.3
# net remora-sp-spindle-fan-pwm remora.SP.4
# net remora-sp-spindle-fan-period remora.SP.5

# process variables
# net remora-pv-spindle-feedback remora.PV.0
# net remora-pv-spindle-temperature remora.PV.1
# net remora-pv-power-temperature remora.PV.2

# joints
# 0/X
setp remora.joint.0.scale [JOINT_0]SCALE
setp remora.joint.0.maxaccel [JOINT_0]STEPGEN_MAX_ACC

net xpos-cmd joint.0.motor-pos-cmd => remora.joint.0.pos-cmd
net j0pos-fb remora.joint.0.pos-fb => joint.0.motor-pos-fb
net j0enable joint.0.amp-enable-out => remora.joint.0.enable
net x-home remora.input.7 => joint.0.home-sw-in => joint.0.neg-lim-sw-in => joint.0.pos-lim-sw-in
#net j0alarm remora.input.1 => joint.0.amp-fault-in

# 1/Y
setp remora.joint.1.scale [JOINT_1]SCALE
setp remora.joint.1.maxaccel [JOINT_1]STEPGEN_MAX_ACC

net ypos-cmd joint.1.motor-pos-cmd => remora.joint.1.pos-cmd
net j1pos-fb remora.joint.1.pos-fb => joint.1.motor-pos-fb
net j1enable joint.1.amp-enable-out => remora.joint.1.enable
net y-home remora.input.8 => joint.1.home-sw-in => joint.1.neg-lim-sw-in => joint.1.pos-lim-sw-in
#net j1alarm remora.input.2 => joint.1.amp-fault-in

# 2/Z
setp remora.joint.2.scale [JOINT_2]SCALE
setp remora.joint.2.maxaccel [JOINT_2]STEPGEN_MAX_ACC

net zpos-cmd joint.2.motor-pos-cmd => remora.joint.2.pos-cmd
net j2pos-fb remora.joint.2.pos-fb => joint.2.motor-pos-fb
net j2enable joint.2.amp-enable-out => remora.joint.2.enable
net z-home remora.input.9 => joint.2.home-sw-in => joint.2.neg-lim-sw-in => joint.2.pos-lim-sw-in
#net j2alarm remora.input.3 => joint.2.amp-fault-in

# 3/A
setp remora.joint.3.scale [JOINT_3]SCALE
setp remora.joint.3.maxaccel [JOINT_3]STEPGEN_MAX_ACC

net apos-cmd joint.3.motor-pos-cmd => remora.joint.3.pos-cmd
net j3pos-fb remora.joint.3.pos-fb => joint.3.motor-pos-fb
net j3enable joint.3.amp-enable-out => remora.joint.3.enable => remora.output.6
net a-home remora.input.10 => joint.3.home-sw-in
